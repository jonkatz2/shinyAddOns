% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/uiTakeSnapshot.R
\name{uiTakeSnapshot}
\alias{uiTakeSnapshot}
\title{uiTakeSnapshot}
\usage{
uiTakeSnapshot(inputs, env)
}
\arguments{
\item{inputs}{A named list or vector of input types (character), named with the inputId.}

\item{env}{Environment in which to find the shiny \code{input} list.}
}
\value{
A list of lists, with variable content according to the following structure:
\describe{
#'     \item{inputId}{\describe{
        \item{type}{Input function, as a character string.}
        \item{value}{Value of the UI input at time of function call.}
    }}
}
}
\description{
Bulk Grab UI Element Values Given A List Of Names and Input Types
}
\details{
The output is designed to easily re-create the current state of the UI, setting values with the appropriate \code{update__Input} function. Note that it is not possible to set a \code{fileInput} value, but it is possible to store the name of the uploaded file.
}
\examples{
\dontrun{
# Must be called within a shiny app
ui <- fluidPage(
    textInput("main", "Plot title:"),
    numericInput("randn", 'Number of Random Values:')
    plotOutput('outplot')
)

server <- function(input, output, session) {
    output$outplot <- renderPlot({
        input.funs <- c(main='textInput', randn='numericInput')
        snapshot <- uiTakeSnapshot(input.funs, environment())
        values <- rnorm(input$randn)
        plot(values, main=input$main)
    })
}
}
}
\author{
Jon Katz
}
\keyword{misc}

